// source: optimizer.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

import * as jspb from "google-protobuf";
var goog = jspb;
var proto = {};

goog.exportSymbol("rl_optimize.ControlRequest", null, proto);
goog.exportSymbol("rl_optimize.ControlRequest.RunCmdType", null, proto);
goog.exportSymbol("rl_optimize.ControlResponse", null, proto);
goog.exportSymbol("rl_optimize.InitRequest", null, proto);
goog.exportSymbol("rl_optimize.InitResponse", null, proto);
goog.exportSymbol("rl_optimize.Layer", null, proto);
goog.exportSymbol("rl_optimize.Layer.Activator", null, proto);
goog.exportSymbol("rl_optimize.Layer.Appendix", null, proto);
goog.exportSymbol("rl_optimize.Layer.Appendix.AppendixType", null, proto);
goog.exportSymbol("rl_optimize.Layer.LayerType", null, proto);
goog.exportSymbol("rl_optimize.Model", null, proto);
goog.exportSymbol("rl_optimize.NNModel", null, proto);
goog.exportSymbol("rl_optimize.NNModel.ModelType", null, proto);
goog.exportSymbol("rl_optimize.Network", null, proto);
goog.exportSymbol("rl_optimize.Network.EarlyStop", null, proto);
goog.exportSymbol("rl_optimize.Network.Initialization", null, proto);
goog.exportSymbol("rl_optimize.Network.Loss", null, proto);
goog.exportSymbol("rl_optimize.Network.Optimizer", null, proto);
goog.exportSymbol("rl_optimize.SaveRequest", null, proto);
goog.exportSymbol("rl_optimize.SaveResponse", null, proto);
goog.exportSymbol("rl_optimize.SimAction", null, proto);
goog.exportSymbol("rl_optimize.SimModel", null, proto);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rl_optimize.Model = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rl_optimize.Model.repeatedFields_, null);
};
goog.inherits(proto.rl_optimize.Model, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rl_optimize.Model.displayName = "proto.rl_optimize.Model";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rl_optimize.SimModel = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rl_optimize.SimModel.repeatedFields_, null);
};
goog.inherits(proto.rl_optimize.SimModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rl_optimize.SimModel.displayName = "proto.rl_optimize.SimModel";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rl_optimize.SimAction = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rl_optimize.SimAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rl_optimize.SimAction.displayName = "proto.rl_optimize.SimAction";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rl_optimize.InitRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rl_optimize.InitRequest.repeatedFields_, null);
};
goog.inherits(proto.rl_optimize.InitRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rl_optimize.InitRequest.displayName = "proto.rl_optimize.InitRequest";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rl_optimize.NNModel = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rl_optimize.NNModel.repeatedFields_, null);
};
goog.inherits(proto.rl_optimize.NNModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rl_optimize.NNModel.displayName = "proto.rl_optimize.NNModel";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rl_optimize.Layer = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rl_optimize.Layer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rl_optimize.Layer.displayName = "proto.rl_optimize.Layer";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rl_optimize.Layer.Appendix = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rl_optimize.Layer.Appendix, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rl_optimize.Layer.Appendix.displayName = "proto.rl_optimize.Layer.Appendix";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rl_optimize.Network = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rl_optimize.Network.repeatedFields_, null);
};
goog.inherits(proto.rl_optimize.Network, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rl_optimize.Network.displayName = "proto.rl_optimize.Network";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rl_optimize.InitResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rl_optimize.InitResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rl_optimize.InitResponse.displayName = "proto.rl_optimize.InitResponse";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rl_optimize.ControlRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rl_optimize.ControlRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rl_optimize.ControlRequest.displayName = "proto.rl_optimize.ControlRequest";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rl_optimize.ControlResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rl_optimize.ControlResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rl_optimize.ControlResponse.displayName = "proto.rl_optimize.ControlResponse";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rl_optimize.SaveRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rl_optimize.SaveRequest.repeatedFields_, null);
};
goog.inherits(proto.rl_optimize.SaveRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rl_optimize.SaveRequest.displayName = "proto.rl_optimize.SaveRequest";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rl_optimize.SaveResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rl_optimize.SaveResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rl_optimize.SaveResponse.displayName = "proto.rl_optimize.SaveResponse";
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rl_optimize.Model.repeatedFields_ = [10];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.rl_optimize.Model.prototype.toObject = function (opt_includeInstance) {
    return proto.rl_optimize.Model.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.rl_optimize.Model} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.rl_optimize.Model.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        inputdimension: jspb.Message.getFieldWithDefault(msg, 1, 0),
        outputdimension: jspb.Message.getFieldWithDefault(msg, 2, 0),
        inferencedimension: jspb.Message.getFieldWithDefault(msg, 3, 0),
        modelparams: (f = msg.getModelparams()) && proto.rl_optimize.NNModel.toObject(includeInstance, f),
        pushfrequency: jspb.Message.getFieldWithDefault(msg, 5, 0),
        inferenceurl: jspb.Message.getFieldWithDefault(msg, 6, ""),
        memoryurl: jspb.Message.getFieldWithDefault(msg, 7, ""),
        modelid: jspb.Message.getFieldWithDefault(msg, 9, ""),
        simmodelList: jspb.Message.toObjectList(msg.getSimmodelList(), proto.rl_optimize.SimModel.toObject, includeInstance),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rl_optimize.Model}
 */
proto.rl_optimize.Model.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rl_optimize.Model();
  return proto.rl_optimize.Model.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rl_optimize.Model} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rl_optimize.Model}
 */
proto.rl_optimize.Model.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setInputdimension(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setOutputdimension(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setInferencedimension(value);
        break;
      case 4:
        var value = new proto.rl_optimize.NNModel();
        reader.readMessage(value, proto.rl_optimize.NNModel.deserializeBinaryFromReader);
        msg.setModelparams(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setPushfrequency(value);
        break;
      case 6:
        var value = /** @type {string} */ (reader.readString());
        msg.setInferenceurl(value);
        break;
      case 7:
        var value = /** @type {string} */ (reader.readString());
        msg.setMemoryurl(value);
        break;
      case 9:
        var value = /** @type {string} */ (reader.readString());
        msg.setModelid(value);
        break;
      case 10:
        var value = new proto.rl_optimize.SimModel();
        reader.readMessage(value, proto.rl_optimize.SimModel.deserializeBinaryFromReader);
        msg.addSimmodel(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rl_optimize.Model.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.rl_optimize.Model.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rl_optimize.Model} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rl_optimize.Model.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getInputdimension();
  if (f !== 0) {
    writer.writeInt64(1, f);
  }
  f = message.getOutputdimension();
  if (f !== 0) {
    writer.writeInt64(2, f);
  }
  f = message.getInferencedimension();
  if (f !== 0) {
    writer.writeInt64(3, f);
  }
  f = message.getModelparams();
  if (f != null) {
    writer.writeMessage(4, f, proto.rl_optimize.NNModel.serializeBinaryToWriter);
  }
  f = message.getPushfrequency();
  if (f !== 0) {
    writer.writeInt64(5, f);
  }
  f = message.getInferenceurl();
  if (f.length > 0) {
    writer.writeString(6, f);
  }
  f = message.getMemoryurl();
  if (f.length > 0) {
    writer.writeString(7, f);
  }
  f = message.getModelid();
  if (f.length > 0) {
    writer.writeString(9, f);
  }
  f = message.getSimmodelList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(10, f, proto.rl_optimize.SimModel.serializeBinaryToWriter);
  }
};

/**
 * optional int64 InputDimension = 1;
 * @return {number}
 */
proto.rl_optimize.Model.prototype.getInputdimension = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.rl_optimize.Model} returns this
 */
proto.rl_optimize.Model.prototype.setInputdimension = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional int64 OutputDimension = 2;
 * @return {number}
 */
proto.rl_optimize.Model.prototype.getOutputdimension = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.rl_optimize.Model} returns this
 */
proto.rl_optimize.Model.prototype.setOutputdimension = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * optional int64 InferenceDimension = 3;
 * @return {number}
 */
proto.rl_optimize.Model.prototype.getInferencedimension = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};

/**
 * @param {number} value
 * @return {!proto.rl_optimize.Model} returns this
 */
proto.rl_optimize.Model.prototype.setInferencedimension = function (value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};

/**
 * optional NNModel ModelParams = 4;
 * @return {?proto.rl_optimize.NNModel}
 */
proto.rl_optimize.Model.prototype.getModelparams = function () {
  return /** @type{?proto.rl_optimize.NNModel} */ (jspb.Message.getWrapperField(this, proto.rl_optimize.NNModel, 4));
};

/**
 * @param {?proto.rl_optimize.NNModel|undefined} value
 * @return {!proto.rl_optimize.Model} returns this
 */
proto.rl_optimize.Model.prototype.setModelparams = function (value) {
  return jspb.Message.setWrapperField(this, 4, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.rl_optimize.Model} returns this
 */
proto.rl_optimize.Model.prototype.clearModelparams = function () {
  return this.setModelparams(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rl_optimize.Model.prototype.hasModelparams = function () {
  return jspb.Message.getField(this, 4) != null;
};

/**
 * optional int64 PushFrequency = 5;
 * @return {number}
 */
proto.rl_optimize.Model.prototype.getPushfrequency = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};

/**
 * @param {number} value
 * @return {!proto.rl_optimize.Model} returns this
 */
proto.rl_optimize.Model.prototype.setPushfrequency = function (value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};

/**
 * optional string InferenceUrl = 6;
 * @return {string}
 */
proto.rl_optimize.Model.prototype.getInferenceurl = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};

/**
 * @param {string} value
 * @return {!proto.rl_optimize.Model} returns this
 */
proto.rl_optimize.Model.prototype.setInferenceurl = function (value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};

/**
 * optional string MemoryUrl = 7;
 * @return {string}
 */
proto.rl_optimize.Model.prototype.getMemoryurl = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};

/**
 * @param {string} value
 * @return {!proto.rl_optimize.Model} returns this
 */
proto.rl_optimize.Model.prototype.setMemoryurl = function (value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};

/**
 * optional string ModelId = 9;
 * @return {string}
 */
proto.rl_optimize.Model.prototype.getModelid = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};

/**
 * @param {string} value
 * @return {!proto.rl_optimize.Model} returns this
 */
proto.rl_optimize.Model.prototype.setModelid = function (value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};

/**
 * repeated SimModel simModel = 10;
 * @return {!Array<!proto.rl_optimize.SimModel>}
 */
proto.rl_optimize.Model.prototype.getSimmodelList = function () {
  return /** @type{!Array<!proto.rl_optimize.SimModel>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rl_optimize.SimModel, 10)
  );
};

/**
 * @param {!Array<!proto.rl_optimize.SimModel>} value
 * @return {!proto.rl_optimize.Model} returns this
 */
proto.rl_optimize.Model.prototype.setSimmodelList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};

/**
 * @param {!proto.rl_optimize.SimModel=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rl_optimize.SimModel}
 */
proto.rl_optimize.Model.prototype.addSimmodel = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.rl_optimize.SimModel, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rl_optimize.Model} returns this
 */
proto.rl_optimize.Model.prototype.clearSimmodelList = function () {
  return this.setSimmodelList([]);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rl_optimize.SimModel.repeatedFields_ = [2, 3];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.rl_optimize.SimModel.prototype.toObject = function (opt_includeInstance) {
    return proto.rl_optimize.SimModel.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.rl_optimize.SimModel} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.rl_optimize.SimModel.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, ""),
        statusList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
        actionList: jspb.Message.toObjectList(msg.getActionList(), proto.rl_optimize.SimAction.toObject, includeInstance),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rl_optimize.SimModel}
 */
proto.rl_optimize.SimModel.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rl_optimize.SimModel();
  return proto.rl_optimize.SimModel.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rl_optimize.SimModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rl_optimize.SimModel}
 */
proto.rl_optimize.SimModel.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.addStatus(value);
        break;
      case 3:
        var value = new proto.rl_optimize.SimAction();
        reader.readMessage(value, proto.rl_optimize.SimAction.deserializeBinaryFromReader);
        msg.addAction(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rl_optimize.SimModel.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.rl_optimize.SimModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rl_optimize.SimModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rl_optimize.SimModel.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getStatusList();
  if (f.length > 0) {
    writer.writeRepeatedString(2, f);
  }
  f = message.getActionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(3, f, proto.rl_optimize.SimAction.serializeBinaryToWriter);
  }
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.rl_optimize.SimModel.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.rl_optimize.SimModel} returns this
 */
proto.rl_optimize.SimModel.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * repeated string status = 2;
 * @return {!Array<string>}
 */
proto.rl_optimize.SimModel.prototype.getStatusList = function () {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};

/**
 * @param {!Array<string>} value
 * @return {!proto.rl_optimize.SimModel} returns this
 */
proto.rl_optimize.SimModel.prototype.setStatusList = function (value) {
  return jspb.Message.setField(this, 2, value || []);
};

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.rl_optimize.SimModel} returns this
 */
proto.rl_optimize.SimModel.prototype.addStatus = function (value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rl_optimize.SimModel} returns this
 */
proto.rl_optimize.SimModel.prototype.clearStatusList = function () {
  return this.setStatusList([]);
};

/**
 * repeated SimAction action = 3;
 * @return {!Array<!proto.rl_optimize.SimAction>}
 */
proto.rl_optimize.SimModel.prototype.getActionList = function () {
  return /** @type{!Array<!proto.rl_optimize.SimAction>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rl_optimize.SimAction, 3)
  );
};

/**
 * @param {!Array<!proto.rl_optimize.SimAction>} value
 * @return {!proto.rl_optimize.SimModel} returns this
 */
proto.rl_optimize.SimModel.prototype.setActionList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};

/**
 * @param {!proto.rl_optimize.SimAction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rl_optimize.SimAction}
 */
proto.rl_optimize.SimModel.prototype.addAction = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.rl_optimize.SimAction, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rl_optimize.SimModel} returns this
 */
proto.rl_optimize.SimModel.prototype.clearActionList = function () {
  return this.setActionList([]);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.rl_optimize.SimAction.prototype.toObject = function (opt_includeInstance) {
    return proto.rl_optimize.SimAction.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.rl_optimize.SimAction} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.rl_optimize.SimAction.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        name: jspb.Message.getFieldWithDefault(msg, 1, ""),
        bound: jspb.Message.getFieldWithDefault(msg, 2, 0),
        shift: jspb.Message.getFieldWithDefault(msg, 3, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rl_optimize.SimAction}
 */
proto.rl_optimize.SimAction.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rl_optimize.SimAction();
  return proto.rl_optimize.SimAction.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rl_optimize.SimAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rl_optimize.SimAction}
 */
proto.rl_optimize.SimAction.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setBound(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setShift(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rl_optimize.SimAction.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.rl_optimize.SimAction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rl_optimize.SimAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rl_optimize.SimAction.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getBound();
  if (f !== 0) {
    writer.writeInt64(2, f);
  }
  f = message.getShift();
  if (f !== 0) {
    writer.writeInt64(3, f);
  }
};

/**
 * optional string name = 1;
 * @return {string}
 */
proto.rl_optimize.SimAction.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.rl_optimize.SimAction} returns this
 */
proto.rl_optimize.SimAction.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional int64 bound = 2;
 * @return {number}
 */
proto.rl_optimize.SimAction.prototype.getBound = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.rl_optimize.SimAction} returns this
 */
proto.rl_optimize.SimAction.prototype.setBound = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * optional int64 shift = 3;
 * @return {number}
 */
proto.rl_optimize.SimAction.prototype.getShift = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};

/**
 * @param {number} value
 * @return {!proto.rl_optimize.SimAction} returns this
 */
proto.rl_optimize.SimAction.prototype.setShift = function (value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rl_optimize.InitRequest.repeatedFields_ = [1];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.rl_optimize.InitRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.rl_optimize.InitRequest.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.rl_optimize.InitRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.rl_optimize.InitRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        modelsList: jspb.Message.toObjectList(msg.getModelsList(), proto.rl_optimize.Model.toObject, includeInstance),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rl_optimize.InitRequest}
 */
proto.rl_optimize.InitRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rl_optimize.InitRequest();
  return proto.rl_optimize.InitRequest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rl_optimize.InitRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rl_optimize.InitRequest}
 */
proto.rl_optimize.InitRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.rl_optimize.Model();
        reader.readMessage(value, proto.rl_optimize.Model.deserializeBinaryFromReader);
        msg.addModels(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rl_optimize.InitRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.rl_optimize.InitRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rl_optimize.InitRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rl_optimize.InitRequest.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getModelsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(1, f, proto.rl_optimize.Model.serializeBinaryToWriter);
  }
};

/**
 * repeated Model models = 1;
 * @return {!Array<!proto.rl_optimize.Model>}
 */
proto.rl_optimize.InitRequest.prototype.getModelsList = function () {
  return /** @type{!Array<!proto.rl_optimize.Model>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rl_optimize.Model, 1)
  );
};

/**
 * @param {!Array<!proto.rl_optimize.Model>} value
 * @return {!proto.rl_optimize.InitRequest} returns this
 */
proto.rl_optimize.InitRequest.prototype.setModelsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};

/**
 * @param {!proto.rl_optimize.Model=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rl_optimize.Model}
 */
proto.rl_optimize.InitRequest.prototype.addModels = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.rl_optimize.Model, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rl_optimize.InitRequest} returns this
 */
proto.rl_optimize.InitRequest.prototype.clearModelsList = function () {
  return this.setModelsList([]);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rl_optimize.NNModel.repeatedFields_ = [1];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.rl_optimize.NNModel.prototype.toObject = function (opt_includeInstance) {
    return proto.rl_optimize.NNModel.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.rl_optimize.NNModel} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.rl_optimize.NNModel.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        networkList: jspb.Message.toObjectList(msg.getNetworkList(), proto.rl_optimize.Network.toObject, includeInstance),
        type: jspb.Message.getFieldWithDefault(msg, 2, 0),
        batchsize: jspb.Message.getFieldWithDefault(msg, 3, 0),
        modelid: jspb.Message.getFieldWithDefault(msg, 4, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rl_optimize.NNModel}
 */
proto.rl_optimize.NNModel.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rl_optimize.NNModel();
  return proto.rl_optimize.NNModel.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rl_optimize.NNModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rl_optimize.NNModel}
 */
proto.rl_optimize.NNModel.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.rl_optimize.Network();
        reader.readMessage(value, proto.rl_optimize.Network.deserializeBinaryFromReader);
        msg.addNetwork(value);
        break;
      case 2:
        var value = /** @type {!proto.rl_optimize.NNModel.ModelType} */ (reader.readEnum());
        msg.setType(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setBatchsize(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setModelid(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rl_optimize.NNModel.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.rl_optimize.NNModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rl_optimize.NNModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rl_optimize.NNModel.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getNetworkList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(1, f, proto.rl_optimize.Network.serializeBinaryToWriter);
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(2, f);
  }
  f = message.getBatchsize();
  if (f !== 0) {
    writer.writeInt64(3, f);
  }
  f = message.getModelid();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
};

/**
 * @enum {number}
 */
proto.rl_optimize.NNModel.ModelType = {
  DQN: 0,
  DOUBLEDQN: 1,
  DDPG: 2,
  MDDPG: 3,
  A3C: 4,
  PPO: 5,
};

/**
 * repeated Network network = 1;
 * @return {!Array<!proto.rl_optimize.Network>}
 */
proto.rl_optimize.NNModel.prototype.getNetworkList = function () {
  return /** @type{!Array<!proto.rl_optimize.Network>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rl_optimize.Network, 1)
  );
};

/**
 * @param {!Array<!proto.rl_optimize.Network>} value
 * @return {!proto.rl_optimize.NNModel} returns this
 */
proto.rl_optimize.NNModel.prototype.setNetworkList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};

/**
 * @param {!proto.rl_optimize.Network=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rl_optimize.Network}
 */
proto.rl_optimize.NNModel.prototype.addNetwork = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.rl_optimize.Network, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rl_optimize.NNModel} returns this
 */
proto.rl_optimize.NNModel.prototype.clearNetworkList = function () {
  return this.setNetworkList([]);
};

/**
 * optional ModelType type = 2;
 * @return {!proto.rl_optimize.NNModel.ModelType}
 */
proto.rl_optimize.NNModel.prototype.getType = function () {
  return /** @type {!proto.rl_optimize.NNModel.ModelType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {!proto.rl_optimize.NNModel.ModelType} value
 * @return {!proto.rl_optimize.NNModel} returns this
 */
proto.rl_optimize.NNModel.prototype.setType = function (value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};

/**
 * optional int64 BatchSize = 3;
 * @return {number}
 */
proto.rl_optimize.NNModel.prototype.getBatchsize = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};

/**
 * @param {number} value
 * @return {!proto.rl_optimize.NNModel} returns this
 */
proto.rl_optimize.NNModel.prototype.setBatchsize = function (value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};

/**
 * optional string ModelId = 4;
 * @return {string}
 */
proto.rl_optimize.NNModel.prototype.getModelid = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};

/**
 * @param {string} value
 * @return {!proto.rl_optimize.NNModel} returns this
 */
proto.rl_optimize.NNModel.prototype.setModelid = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.rl_optimize.Layer.prototype.toObject = function (opt_includeInstance) {
    return proto.rl_optimize.Layer.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.rl_optimize.Layer} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.rl_optimize.Layer.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        type: jspb.Message.getFieldWithDefault(msg, 1, 0),
        activator: jspb.Message.getFieldWithDefault(msg, 2, 0),
        neutralamount: jspb.Message.getFieldWithDefault(msg, 3, 0),
        appendix: (f = msg.getAppendix()) && proto.rl_optimize.Layer.Appendix.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rl_optimize.Layer}
 */
proto.rl_optimize.Layer.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rl_optimize.Layer();
  return proto.rl_optimize.Layer.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rl_optimize.Layer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rl_optimize.Layer}
 */
proto.rl_optimize.Layer.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {!proto.rl_optimize.Layer.LayerType} */ (reader.readEnum());
        msg.setType(value);
        break;
      case 2:
        var value = /** @type {!proto.rl_optimize.Layer.Activator} */ (reader.readEnum());
        msg.setActivator(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setNeutralamount(value);
        break;
      case 4:
        var value = new proto.rl_optimize.Layer.Appendix();
        reader.readMessage(value, proto.rl_optimize.Layer.Appendix.deserializeBinaryFromReader);
        msg.setAppendix(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rl_optimize.Layer.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.rl_optimize.Layer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rl_optimize.Layer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rl_optimize.Layer.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(1, f);
  }
  f = message.getActivator();
  if (f !== 0.0) {
    writer.writeEnum(2, f);
  }
  f = message.getNeutralamount();
  if (f !== 0) {
    writer.writeInt64(3, f);
  }
  f = message.getAppendix();
  if (f != null) {
    writer.writeMessage(4, f, proto.rl_optimize.Layer.Appendix.serializeBinaryToWriter);
  }
};

/**
 * @enum {number}
 */
proto.rl_optimize.Layer.LayerType = {
  AFFINE: 0,
  INPUT: 1,
  OUTPUT: 2,
};

/**
 * @enum {number}
 */
proto.rl_optimize.Layer.Activator = {
  ELU: 0,
  EXPONENTIAL: 1,
  GELU: 2,
  GET: 3,
  HARD_SIGMOID: 4,
  LINEAR: 5,
  RELU: 6,
  SELU: 7,
  SERIALIZE: 8,
  SIGMOID: 9,
  SOFTMAX: 10,
  SOFTPLUS: 11,
  SOFTSIGN: 12,
  SWISH: 13,
  TANH: 14,
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.rl_optimize.Layer.Appendix.prototype.toObject = function (opt_includeInstance) {
    return proto.rl_optimize.Layer.Appendix.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.rl_optimize.Layer.Appendix} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.rl_optimize.Layer.Appendix.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        appendixtype: jspb.Message.getFieldWithDefault(msg, 1, 0),
        param: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rl_optimize.Layer.Appendix}
 */
proto.rl_optimize.Layer.Appendix.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rl_optimize.Layer.Appendix();
  return proto.rl_optimize.Layer.Appendix.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rl_optimize.Layer.Appendix} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rl_optimize.Layer.Appendix}
 */
proto.rl_optimize.Layer.Appendix.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {!proto.rl_optimize.Layer.Appendix.AppendixType} */ (reader.readEnum());
        msg.setAppendixtype(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readFloat());
        msg.setParam(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rl_optimize.Layer.Appendix.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.rl_optimize.Layer.Appendix.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rl_optimize.Layer.Appendix} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rl_optimize.Layer.Appendix.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getAppendixtype();
  if (f !== 0.0) {
    writer.writeEnum(1, f);
  }
  f = message.getParam();
  if (f !== 0.0) {
    writer.writeFloat(2, f);
  }
};

/**
 * @enum {number}
 */
proto.rl_optimize.Layer.Appendix.AppendixType = {
  NONE: 0,
  DROPOUT: 1,
  NORMALBATCH: 2,
  IC: 3,
};

/**
 * optional AppendixType appendixType = 1;
 * @return {!proto.rl_optimize.Layer.Appendix.AppendixType}
 */
proto.rl_optimize.Layer.Appendix.prototype.getAppendixtype = function () {
  return /** @type {!proto.rl_optimize.Layer.Appendix.AppendixType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {!proto.rl_optimize.Layer.Appendix.AppendixType} value
 * @return {!proto.rl_optimize.Layer.Appendix} returns this
 */
proto.rl_optimize.Layer.Appendix.prototype.setAppendixtype = function (value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};

/**
 * optional float param = 2;
 * @return {number}
 */
proto.rl_optimize.Layer.Appendix.prototype.getParam = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};

/**
 * @param {number} value
 * @return {!proto.rl_optimize.Layer.Appendix} returns this
 */
proto.rl_optimize.Layer.Appendix.prototype.setParam = function (value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};

/**
 * optional LayerType type = 1;
 * @return {!proto.rl_optimize.Layer.LayerType}
 */
proto.rl_optimize.Layer.prototype.getType = function () {
  return /** @type {!proto.rl_optimize.Layer.LayerType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {!proto.rl_optimize.Layer.LayerType} value
 * @return {!proto.rl_optimize.Layer} returns this
 */
proto.rl_optimize.Layer.prototype.setType = function (value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};

/**
 * optional Activator activator = 2;
 * @return {!proto.rl_optimize.Layer.Activator}
 */
proto.rl_optimize.Layer.prototype.getActivator = function () {
  return /** @type {!proto.rl_optimize.Layer.Activator} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {!proto.rl_optimize.Layer.Activator} value
 * @return {!proto.rl_optimize.Layer} returns this
 */
proto.rl_optimize.Layer.prototype.setActivator = function (value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};

/**
 * optional int64 neutralAmount = 3;
 * @return {number}
 */
proto.rl_optimize.Layer.prototype.getNeutralamount = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};

/**
 * @param {number} value
 * @return {!proto.rl_optimize.Layer} returns this
 */
proto.rl_optimize.Layer.prototype.setNeutralamount = function (value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};

/**
 * optional Appendix appendix = 4;
 * @return {?proto.rl_optimize.Layer.Appendix}
 */
proto.rl_optimize.Layer.prototype.getAppendix = function () {
  return /** @type{?proto.rl_optimize.Layer.Appendix} */ (
    jspb.Message.getWrapperField(this, proto.rl_optimize.Layer.Appendix, 4)
  );
};

/**
 * @param {?proto.rl_optimize.Layer.Appendix|undefined} value
 * @return {!proto.rl_optimize.Layer} returns this
 */
proto.rl_optimize.Layer.prototype.setAppendix = function (value) {
  return jspb.Message.setWrapperField(this, 4, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.rl_optimize.Layer} returns this
 */
proto.rl_optimize.Layer.prototype.clearAppendix = function () {
  return this.setAppendix(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rl_optimize.Layer.prototype.hasAppendix = function () {
  return jspb.Message.getField(this, 4) != null;
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rl_optimize.Network.repeatedFields_ = [2];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.rl_optimize.Network.prototype.toObject = function (opt_includeInstance) {
    return proto.rl_optimize.Network.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.rl_optimize.Network} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.rl_optimize.Network.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        initialization: jspb.Message.getFieldWithDefault(msg, 1, 0),
        layersList: jspb.Message.toObjectList(msg.getLayersList(), proto.rl_optimize.Layer.toObject, includeInstance),
        subnetname: jspb.Message.getFieldWithDefault(msg, 3, ""),
        loss: jspb.Message.getFieldWithDefault(msg, 4, 0),
        lossfunction: jspb.Message.getFieldWithDefault(msg, 5, ""),
        optimizer: jspb.Message.getFieldWithDefault(msg, 6, 0),
        learningrate: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
        learningratedecay: jspb.Message.getFieldWithDefault(msg, 8, ""),
        earlystop: jspb.Message.getFieldWithDefault(msg, 9, 0),
        earlystopfunction: jspb.Message.getFieldWithDefault(msg, 10, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rl_optimize.Network}
 */
proto.rl_optimize.Network.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rl_optimize.Network();
  return proto.rl_optimize.Network.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rl_optimize.Network} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rl_optimize.Network}
 */
proto.rl_optimize.Network.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {!proto.rl_optimize.Network.Initialization} */ (reader.readEnum());
        msg.setInitialization(value);
        break;
      case 2:
        var value = new proto.rl_optimize.Layer();
        reader.readMessage(value, proto.rl_optimize.Layer.deserializeBinaryFromReader);
        msg.addLayers(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setSubnetname(value);
        break;
      case 4:
        var value = /** @type {!proto.rl_optimize.Network.Loss} */ (reader.readEnum());
        msg.setLoss(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setLossfunction(value);
        break;
      case 6:
        var value = /** @type {!proto.rl_optimize.Network.Optimizer} */ (reader.readEnum());
        msg.setOptimizer(value);
        break;
      case 7:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setLearningrate(value);
        break;
      case 8:
        var value = /** @type {string} */ (reader.readString());
        msg.setLearningratedecay(value);
        break;
      case 9:
        var value = /** @type {!proto.rl_optimize.Network.EarlyStop} */ (reader.readEnum());
        msg.setEarlystop(value);
        break;
      case 10:
        var value = /** @type {string} */ (reader.readString());
        msg.setEarlystopfunction(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rl_optimize.Network.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.rl_optimize.Network.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rl_optimize.Network} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rl_optimize.Network.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getInitialization();
  if (f !== 0.0) {
    writer.writeEnum(1, f);
  }
  f = message.getLayersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(2, f, proto.rl_optimize.Layer.serializeBinaryToWriter);
  }
  f = message.getSubnetname();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getLoss();
  if (f !== 0.0) {
    writer.writeEnum(4, f);
  }
  f = message.getLossfunction();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getOptimizer();
  if (f !== 0.0) {
    writer.writeEnum(6, f);
  }
  f = message.getLearningrate();
  if (f !== 0.0) {
    writer.writeDouble(7, f);
  }
  f = message.getLearningratedecay();
  if (f.length > 0) {
    writer.writeString(8, f);
  }
  f = message.getEarlystop();
  if (f !== 0.0) {
    writer.writeEnum(9, f);
  }
  f = message.getEarlystopfunction();
  if (f.length > 0) {
    writer.writeString(10, f);
  }
};

/**
 * @enum {number}
 */
proto.rl_optimize.Network.Initialization = {
  HEUNIFORM: 0,
  HENORMAL: 1,
  GLOROTNORMAL: 2,
  GLOROTUNIFORM: 3,
  CONSTANT: 4,
  ONES: 5,
  ORTHOGONAL: 6,
  RANDOMUNIFORM: 7,
  TRUNCATENORMAL: 8,
  ZEROS: 9,
};

/**
 * @enum {number}
 */
proto.rl_optimize.Network.Loss = {
  MEANABSOLUTEERROR: 0,
  MEANABSOLUTEPERCENTAGEERROR: 1,
  MEANSQUAREDERROR: 2,
  MEANSQUAREDLOGARITHMICERROR: 3,
  CATEGORICALCROSSENTROPY: 4,
  SPARSECATEGORICALCROSSENTROPY: 5,
  BINARYCROSSENTROPY: 6,
  HINGE: 7,
  CATEGORICALHINGE: 8,
  POISSON: 9,
  SQUAREDHINGE: 10,
  LOGCOSH: 11,
  KLDIVERGENCE: 12,
  HUBE: 13,
};

/**
 * @enum {number}
 */
proto.rl_optimize.Network.Optimizer = {
  RMSPROP: 0,
  NADAM: 1,
  SGD: 2,
  FTRL: 3,
  ADAM: 4,
  ADAMAX: 5,
  ADAGRAD: 6,
  ADADELTA: 7,
};

/**
 * @enum {number}
 */
proto.rl_optimize.Network.EarlyStop = {
  NONE: 0,
  BASEONLOSS: 1,
  BASEONPROGRESS: 2,
  BASEONERROR: 3,
};

/**
 * optional Initialization initialization = 1;
 * @return {!proto.rl_optimize.Network.Initialization}
 */
proto.rl_optimize.Network.prototype.getInitialization = function () {
  return /** @type {!proto.rl_optimize.Network.Initialization} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {!proto.rl_optimize.Network.Initialization} value
 * @return {!proto.rl_optimize.Network} returns this
 */
proto.rl_optimize.Network.prototype.setInitialization = function (value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};

/**
 * repeated Layer layers = 2;
 * @return {!Array<!proto.rl_optimize.Layer>}
 */
proto.rl_optimize.Network.prototype.getLayersList = function () {
  return /** @type{!Array<!proto.rl_optimize.Layer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rl_optimize.Layer, 2)
  );
};

/**
 * @param {!Array<!proto.rl_optimize.Layer>} value
 * @return {!proto.rl_optimize.Network} returns this
 */
proto.rl_optimize.Network.prototype.setLayersList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};

/**
 * @param {!proto.rl_optimize.Layer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rl_optimize.Layer}
 */
proto.rl_optimize.Network.prototype.addLayers = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.rl_optimize.Layer, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rl_optimize.Network} returns this
 */
proto.rl_optimize.Network.prototype.clearLayersList = function () {
  return this.setLayersList([]);
};

/**
 * optional string subNetName = 3;
 * @return {string}
 */
proto.rl_optimize.Network.prototype.getSubnetname = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};

/**
 * @param {string} value
 * @return {!proto.rl_optimize.Network} returns this
 */
proto.rl_optimize.Network.prototype.setSubnetname = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional Loss loss = 4;
 * @return {!proto.rl_optimize.Network.Loss}
 */
proto.rl_optimize.Network.prototype.getLoss = function () {
  return /** @type {!proto.rl_optimize.Network.Loss} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};

/**
 * @param {!proto.rl_optimize.Network.Loss} value
 * @return {!proto.rl_optimize.Network} returns this
 */
proto.rl_optimize.Network.prototype.setLoss = function (value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};

/**
 * optional string lossFunction = 5;
 * @return {string}
 */
proto.rl_optimize.Network.prototype.getLossfunction = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};

/**
 * @param {string} value
 * @return {!proto.rl_optimize.Network} returns this
 */
proto.rl_optimize.Network.prototype.setLossfunction = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional Optimizer optimizer = 6;
 * @return {!proto.rl_optimize.Network.Optimizer}
 */
proto.rl_optimize.Network.prototype.getOptimizer = function () {
  return /** @type {!proto.rl_optimize.Network.Optimizer} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};

/**
 * @param {!proto.rl_optimize.Network.Optimizer} value
 * @return {!proto.rl_optimize.Network} returns this
 */
proto.rl_optimize.Network.prototype.setOptimizer = function (value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};

/**
 * optional double learningRate = 7;
 * @return {number}
 */
proto.rl_optimize.Network.prototype.getLearningrate = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};

/**
 * @param {number} value
 * @return {!proto.rl_optimize.Network} returns this
 */
proto.rl_optimize.Network.prototype.setLearningrate = function (value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};

/**
 * optional string learningRateDecay = 8;
 * @return {string}
 */
proto.rl_optimize.Network.prototype.getLearningratedecay = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};

/**
 * @param {string} value
 * @return {!proto.rl_optimize.Network} returns this
 */
proto.rl_optimize.Network.prototype.setLearningratedecay = function (value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};

/**
 * optional EarlyStop earlyStop = 9;
 * @return {!proto.rl_optimize.Network.EarlyStop}
 */
proto.rl_optimize.Network.prototype.getEarlystop = function () {
  return /** @type {!proto.rl_optimize.Network.EarlyStop} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};

/**
 * @param {!proto.rl_optimize.Network.EarlyStop} value
 * @return {!proto.rl_optimize.Network} returns this
 */
proto.rl_optimize.Network.prototype.setEarlystop = function (value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};

/**
 * optional string earlyStopFunction = 10;
 * @return {string}
 */
proto.rl_optimize.Network.prototype.getEarlystopfunction = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};

/**
 * @param {string} value
 * @return {!proto.rl_optimize.Network} returns this
 */
proto.rl_optimize.Network.prototype.setEarlystopfunction = function (value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.rl_optimize.InitResponse.prototype.toObject = function (opt_includeInstance) {
    return proto.rl_optimize.InitResponse.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.rl_optimize.InitResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.rl_optimize.InitResponse.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        msg: jspb.Message.getFieldWithDefault(msg, 1, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rl_optimize.InitResponse}
 */
proto.rl_optimize.InitResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rl_optimize.InitResponse();
  return proto.rl_optimize.InitResponse.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rl_optimize.InitResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rl_optimize.InitResponse}
 */
proto.rl_optimize.InitResponse.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setMsg(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rl_optimize.InitResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.rl_optimize.InitResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rl_optimize.InitResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rl_optimize.InitResponse.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
};

/**
 * optional string msg = 1;
 * @return {string}
 */
proto.rl_optimize.InitResponse.prototype.getMsg = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.rl_optimize.InitResponse} returns this
 */
proto.rl_optimize.InitResponse.prototype.setMsg = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.rl_optimize.ControlRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.rl_optimize.ControlRequest.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.rl_optimize.ControlRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.rl_optimize.ControlRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        runCmd: jspb.Message.getFieldWithDefault(msg, 1, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rl_optimize.ControlRequest}
 */
proto.rl_optimize.ControlRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rl_optimize.ControlRequest();
  return proto.rl_optimize.ControlRequest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rl_optimize.ControlRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rl_optimize.ControlRequest}
 */
proto.rl_optimize.ControlRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {!proto.rl_optimize.ControlRequest.RunCmdType} */ (reader.readEnum());
        msg.setRunCmd(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rl_optimize.ControlRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.rl_optimize.ControlRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rl_optimize.ControlRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rl_optimize.ControlRequest.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getRunCmd();
  if (f !== 0.0) {
    writer.writeEnum(1, f);
  }
};

/**
 * @enum {number}
 */
proto.rl_optimize.ControlRequest.RunCmdType = {
  START: 0,
  SUSPEND: 1,
  CONTINUE: 2,
  STOP: 3,
};

/**
 * optional RunCmdType run_cmd = 1;
 * @return {!proto.rl_optimize.ControlRequest.RunCmdType}
 */
proto.rl_optimize.ControlRequest.prototype.getRunCmd = function () {
  return /** @type {!proto.rl_optimize.ControlRequest.RunCmdType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {!proto.rl_optimize.ControlRequest.RunCmdType} value
 * @return {!proto.rl_optimize.ControlRequest} returns this
 */
proto.rl_optimize.ControlRequest.prototype.setRunCmd = function (value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.rl_optimize.ControlResponse.prototype.toObject = function (opt_includeInstance) {
    return proto.rl_optimize.ControlResponse.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.rl_optimize.ControlResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.rl_optimize.ControlResponse.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        msg: jspb.Message.getFieldWithDefault(msg, 1, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rl_optimize.ControlResponse}
 */
proto.rl_optimize.ControlResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rl_optimize.ControlResponse();
  return proto.rl_optimize.ControlResponse.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rl_optimize.ControlResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rl_optimize.ControlResponse}
 */
proto.rl_optimize.ControlResponse.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setMsg(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rl_optimize.ControlResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.rl_optimize.ControlResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rl_optimize.ControlResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rl_optimize.ControlResponse.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
};

/**
 * optional string msg = 1;
 * @return {string}
 */
proto.rl_optimize.ControlResponse.prototype.getMsg = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.rl_optimize.ControlResponse} returns this
 */
proto.rl_optimize.ControlResponse.prototype.setMsg = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rl_optimize.SaveRequest.repeatedFields_ = [1];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.rl_optimize.SaveRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.rl_optimize.SaveRequest.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.rl_optimize.SaveRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.rl_optimize.SaveRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        modelsList: jspb.Message.toObjectList(msg.getModelsList(), proto.rl_optimize.NNModel.toObject, includeInstance),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rl_optimize.SaveRequest}
 */
proto.rl_optimize.SaveRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rl_optimize.SaveRequest();
  return proto.rl_optimize.SaveRequest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rl_optimize.SaveRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rl_optimize.SaveRequest}
 */
proto.rl_optimize.SaveRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.rl_optimize.NNModel();
        reader.readMessage(value, proto.rl_optimize.NNModel.deserializeBinaryFromReader);
        msg.addModels(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rl_optimize.SaveRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.rl_optimize.SaveRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rl_optimize.SaveRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rl_optimize.SaveRequest.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getModelsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(1, f, proto.rl_optimize.NNModel.serializeBinaryToWriter);
  }
};

/**
 * repeated NNModel models = 1;
 * @return {!Array<!proto.rl_optimize.NNModel>}
 */
proto.rl_optimize.SaveRequest.prototype.getModelsList = function () {
  return /** @type{!Array<!proto.rl_optimize.NNModel>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rl_optimize.NNModel, 1)
  );
};

/**
 * @param {!Array<!proto.rl_optimize.NNModel>} value
 * @return {!proto.rl_optimize.SaveRequest} returns this
 */
proto.rl_optimize.SaveRequest.prototype.setModelsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};

/**
 * @param {!proto.rl_optimize.NNModel=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rl_optimize.NNModel}
 */
proto.rl_optimize.SaveRequest.prototype.addModels = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.rl_optimize.NNModel, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rl_optimize.SaveRequest} returns this
 */
proto.rl_optimize.SaveRequest.prototype.clearModelsList = function () {
  return this.setModelsList([]);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.rl_optimize.SaveResponse.prototype.toObject = function (opt_includeInstance) {
    return proto.rl_optimize.SaveResponse.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.rl_optimize.SaveResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.rl_optimize.SaveResponse.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        msg: jspb.Message.getFieldWithDefault(msg, 1, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rl_optimize.SaveResponse}
 */
proto.rl_optimize.SaveResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rl_optimize.SaveResponse();
  return proto.rl_optimize.SaveResponse.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rl_optimize.SaveResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rl_optimize.SaveResponse}
 */
proto.rl_optimize.SaveResponse.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setMsg(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rl_optimize.SaveResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.rl_optimize.SaveResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rl_optimize.SaveResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rl_optimize.SaveResponse.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
};

/**
 * optional string msg = 1;
 * @return {string}
 */
proto.rl_optimize.SaveResponse.prototype.getMsg = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.rl_optimize.SaveResponse} returns this
 */
proto.rl_optimize.SaveResponse.prototype.setMsg = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

export default proto.rl_optimize;
